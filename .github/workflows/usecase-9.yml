name: Terraform Github Use Case - 9

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action to be performed"
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
        
  push:
    paths:
      - 'usecase-9/**'
      - .github/workflows/usecase-9.yml'
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  build:
    if: ${{ github.event.inputs.action != 'destroy' }}
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: usecase-9

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2
        with: 
          ref: ${{ github.head_ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      - name: Build and push
        run: |
          cd modules/app/
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 427521931204.dkr.ecr.ap-south-1.amazonaws.com
          docker build -t python-kubernetes .
          docker tag python-kubernetes:latest 427521931204.dkr.ecr.ap-south-1.amazonaws.com/python-kubernetes:latest
          docker push 427521931204.dkr.ecr.ap-south-1.amazonaws.com/python-kubernetes:latest

  terraform:
    needs: build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: usecase-9

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2
        with: 
          ref: ${{ github.head_ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      - name: Pull terraform.tfvars from S3
        run: |
          aws s3 cp s3://terraform-usecases-batch6/env/usecase-9/terraform.tfvars .

      - name: Initiate terraform
        run: |
          terraform init
          terraform fmt -recursive
          terraform validate

      - name: Terraform Plan
        if: ${{ github.event.input.action == "plan" || github.event.input.action == "apply" }}
        run: terraform plan

      - name: Terraform Apply
        if: ${{ github.event.input.action == "apply" }}
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.input.action == "destroy" }}
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name eks-cluster
          kubectl apply -f ./modules/app/service-lb-destroy.yaml
          terraform destroy -auto-approve


  kubernetes:
    needs: terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: usecase-9

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2
        with: 
          ref: ${{ github.head_ref }}

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ap-south-1 --name eks-cluster

      - name: Verify Cluster Access
        run: |
          kubectl get nodes -o wide
          kubectl get svc -o wide
          kubectl get pods -o wide

      - name: EKS Deployment + Service
        run: |
          kubectl apply -f ./modules/app/deployment.yaml
          kubectl apply -f ./modules/app/service.yaml
