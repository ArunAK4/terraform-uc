name: Terraform Github Use Case 5

on:
  push:
    paths:
      - 'usecase-5/**'
      - '.github/workflows/usecase-5.yml'
    branches: main
  
permissions:
  id-token: write
  contents: read

jobs:
  terraform-uc3:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: usecase-5

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: SetUp AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.OIDC_ROLE }}

      - name: Create terraform.tfvars
        run: |
          cat <<EOF > terraform.tfvars
          ami_id          = "ami-0803576f0c0169402"
          vpc_cidr        = "10.0.0.0/16"
          public_subnets  = ["10.0.11.0/24", "10.0.12.0/24"]
          private_subnets = ["10.0.21.0/24", "10.0.22.0/24"]
          azs             = ["eu-west-1a", "eu-west-1b"]
          region          = "eu-west-1"
          vpc_name        = "Custom-VPC"
          EOF

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest
          
      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        
      - name: Run TFLint
        run: tflint -f compact

      - name: Run Checkon Scan
        run: checkov -d . --framework terraform --soft-fail  --output json > checkov_result.json

      - name: Upload build artifact
        uses: actions/upload-artifact@v4.6.2
        with:
         name: checkov-info
         path: checkov_result.json

      - name: Terraform Doc
        uses: terraform-docs/gh-actions@main
        with: 
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true"

      - name: Run implement terraform
        run: |
          terraform init
          terraform fmt -recursive
          terraform validate
          terraform plan -var-file=terraform.tfvars
          terraform apply -var-file=terraform.tfvars -auto-approve
